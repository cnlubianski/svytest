// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// perm_stats_cpp
NumericVector perm_stats_cpp(const arma::mat& X, const arma::vec& y, const arma::vec& w, const arma::vec& w_null, const arma::umat& perm, const std::string& stat);
RcppExport SEXP _svytest_perm_stats_cpp(SEXP XSEXP, SEXP ySEXP, SEXP wSEXP, SEXP w_nullSEXP, SEXP permSEXP, SEXP statSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w(wSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type w_null(w_nullSEXP);
    Rcpp::traits::input_parameter< const arma::umat& >::type perm(permSEXP);
    Rcpp::traits::input_parameter< const std::string& >::type stat(statSEXP);
    rcpp_result_gen = Rcpp::wrap(perm_stats_cpp(X, y, w, w_null, perm, stat));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_svytest_perm_stats_cpp", (DL_FUNC) &_svytest_perm_stats_cpp, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_svytest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
